stages:
  - build
  - deploy

build-dev-image:
  image: docker:dind
  timeout: 10m
  stage: build
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --build-arg REACT_APP_ADMIN_URL=https://admin.quiz.dev.smartbits.hu --build-arg REACT_APP_PUBLIC_URL=https://quiz.dev.smartbits.hu --pull -t "$CI_REGISTRY_IMAGE/dev:$CI_COMMIT_SHORT_SHA" -t "$CI_REGISTRY_IMAGE/dev:latest" .
    - docker push "$CI_REGISTRY_IMAGE/dev:$CI_COMMIT_SHORT_SHA"
    - docker push "$CI_REGISTRY_IMAGE/dev:latest"
  only:
    - develop

build-prod-image:
  image: docker:dind
  timeout: 10m
  stage: build
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --build-arg REACT_APP_ADMIN_URL=https://admin.quiz.smartbits.hu --build-arg REACT_APP_PUBLIC_URL=https://quiz.smartbits.hu --pull -t "$CI_REGISTRY_IMAGE/prod:$CI_COMMIT_SHORT_SHA" -t "$CI_REGISTRY_IMAGE/prod:latest" .
    - docker push "$CI_REGISTRY_IMAGE/prod:$CI_COMMIT_SHORT_SHA"
    - docker push "$CI_REGISTRY_IMAGE/prod:latest"
  only:
    - main

development:
  image: ubuntu
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'

    - eval $(ssh-agent -s)

    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - ssh-keyscan museum-api.smartbits.hu >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  environment: development
  script:
    - ssh museum@museum-api.smartbits.hu "cd /home/museum/szfv-game/orchestration-dev && git pull && sudo ./deploy.sh dev"
  only:
    - develop

production:
  image: ubuntu
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'

    - eval $(ssh-agent -s)

    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - ssh-keyscan museum-api.smartbits.hu >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  environment: production
  script:
    - ssh museum@museum-api.smartbits.hu "cd /home/museum/szfv-game/orchestration-prod && git pull && sudo ./deploy.sh prod"
  only:
    - main
  when: manual